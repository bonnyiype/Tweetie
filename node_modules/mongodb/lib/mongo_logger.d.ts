/// <reference types="node" />
import { Writable } from 'stream';
/** @internal */
export declare const SeverityLevel: Readonly<{
    readonly EMERGENCY: "emergency";
    readonly ALERT: "alert";
    readonly CRITICAL: "critical";
    readonly ERROR: "error";
    readonly WARNING: "warn";
    readonly NOTICE: "notice";
    readonly INFORMATIONAL: "info";
    readonly DEBUG: "debug";
    readonly TRACE: "trace";
    readonly OFF: "off";
}>;
/** @internal */
export type SeverityLevel = typeof SeverityLevel[keyof typeof SeverityLevel];
/** @internal */
export declare const MongoLoggableComponent: Readonly<{
    readonly COMMAND: "command";
    readonly TOPOLOGY: "topology";
    readonly SERVER_SELECTION: "serverSelection";
    readonly CONNECTION: "connection";
}>;
/** @internal */
export type MongoLoggableComponent = typeof MongoLoggableComponent[keyof typeof MongoLoggableComponent];
/** @internal */
export interface MongoLoggerEnvOptions {
    /** Severity level for command component */
    MONGODB_LOG_COMMAND?: string;
    /** Severity level for topology component */
    MONGODB_LOG_TOPOLOGY?: string;
    /** Severity level for server selection component */
    MONGODB_LOG_SERVER_SELECTION?: string;
    /** Severity level for CMAP */
    MONGODB_LOG_CONNECTION?: string;
    /** Default severity level to be if any of the above are unset */
    MONGODB_LOG_ALL?: string;
    /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */
    MONGODB_LOG_MAX_DOCUMENT_LENGTH?: string;
    /** Destination for log messages. Must be 'stderr', 'stdout'. Defaults to 'stderr'. */
    MONGODB_LOG_PATH?: string;
}
/** @internal */
export interface MongoLoggerMongoClientOptions {
    /** Destination for log messages */
    mongodbLogPath?: 'stdout' | 'stderr' | Writable;
}
/** @internal */
export interface MongoLoggerOptions {
    componentSeverities: {
        /** Severity level for command component */
        command: SeverityLevel;
        /** Severity level for topology component */
        topology: SeverityLevel;
        /** Severity level for server selection component */
        serverSelection: SeverityLevel;
        /** Severity level for connection component */
        connection: SeverityLevel;
        /** Default severity level to be used if any of the above are unset */
        default: SeverityLevel;
    };
    /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */
    maxDocumentLength: number;
    /** Destination for log messages. */
    logDestination: Writable;
}
/** @internal */
export declare class MongoLogger {
    componentSeverities: Record<MongoLoggableComponent, SeverityLevel>;
    maxDocumentLength: number;
    logDestination: Writable;
    constructor(options: MongoLoggerOptions);
    emergency(component: any, message: any): void;
    alert(component: any, message: any): void;
    critical(component: any, message: any): void;
    error(component: any, message: any): void;
    warn(component: any, message: any): void;
    notice(component: any, message: any): void;
    info(component: any, message: any): void;
    debug(component: any, message: any): void;
    trace(component: any, message: any): void;
    /**
     * Merges options set through environment variables and the MongoClient, preferring environment
     * variables when both are set, and substituting defaults for values not set. Options set in
     * constructor take precedence over both environment variables and MongoClient options.
     *
     * @remarks
     * When parsing component severity levels, invalid values are treated as unset and replaced with
     * the default severity.
     *
     * @param envOptions - options set for the logger from the environment
     * @param clientOptions - options set for the logger in the MongoClient options
     * @returns a MongoLoggerOptions object to be used when instantiating a new MongoLogger
     */
    static resolveOptions(envOptions: MongoLoggerEnvOptions, clientOptions: MongoLoggerMongoClientOptions): MongoLoggerOptions;
}
//# sourceMappingURL=mongo_logger.d.ts.map