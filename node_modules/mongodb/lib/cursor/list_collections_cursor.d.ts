import type { Document } from '../bson';
import type { Db } from '../db';
import { ExecutionResult } from '../operations/execute_operation';
import { CollectionInfo, ListCollectionsOptions } from '../operations/list_collections';
import type { ClientSession } from '../sessions';
import type { Callback } from '../utils';
import { AbstractCursor } from './abstract_cursor';
/** @public */
export declare class ListCollectionsCursor<T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo = Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo> extends AbstractCursor<T> {
    parent: Db;
    filter: Document;
    options?: ListCollectionsOptions;
    constructor(db: Db, filter: Document, options?: ListCollectionsOptions);
    clone(): ListCollectionsCursor<T>;
    /** @internal */
    _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void;
}
//# sourceMappingURL=list_collections_cursor.d.ts.map